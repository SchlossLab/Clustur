% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cluster.R
\name{opti_cluster}
\alias{opti_cluster}
\title{clustur Description}
\usage{
opti_cluster(
  cutoff,
  count_table,
  iterations = 100,
  shuffle = TRUE,
  simularity_matrix = FALSE,
  random_seed = 123,
  ...
)
}
\arguments{
\item{cutoff}{A cutoff value}

\item{count_table}{A table of names and the given abundance per group.}

\item{iterations}{The number of iterations}

\item{shuffle}{a boolean to determine whether or
not you want to shuffle the data before you cluster}

\item{simularity_matrix}{are you using a simularity matrix or distance matrix}

\item{random_seed}{you can set your own random
seed for consistent results, if not it will be set to 123}

\item{...}{Either your phylip file or column file path,
or a sparse distance matrix}
}
\value{
A data.frame of the cluster and cluster metrics.
}
\description{
You must specfiy the type of matrix you are inputting
 to cluster your object and we support three types:
the path to your phylip and column distance file, or a sparse matrix.
}
\examples{
 # Using a sparse matrix
 i_values <- as.integer(1:100)
 j_values <- as.integer(sample(1:100, 100, TRUE))
 x_values <- as.numeric(runif(100, 0, 1))
 s_matrix <- Matrix::spMatrix(nrow=max(i_values),
                              ncol=max(i_values),
                              i=i_values,
                              j=j_values,
                              x=x_values)

 # Creating a count table using the sparse matrix
 count_table_sparse <- data.frame(sequence=as.character(i_values),
                                 total=rep(1,times=100))

 cluster_results <- opti_cluster(cutoff=0.2,
                                 count_table = count_table_sparse,
                                 sparse_matrix=s_matrix)

 # With a column file
 count_table <- read.delim(example_path("amazon1.count_table"))
 amazon_data_column <- opti_cluster(column_path=
                                    example_path("96_sq_column_amazon.dist"),
                                    count_table = count_table, cutoff = 0.2)
 # With a phylip file
 count_table <- read.delim(example_path("amazon1.count_table"))
 amazon_data_phylip <- opti_cluster(phylip_path=
                                    example_path("98_sq_phylip_amazon.dist"),
                                    count_table = count_table, cutoff = 0.2)



}
